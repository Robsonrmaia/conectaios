import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { message, history = [] } = await req.json();

    if (!message) {
      return new Response(
        JSON.stringify({ error: 'Mensagem √© obrigat√≥ria' }),
        { status: 400, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
      );
    }

    const OPENAI_API_KEY = Deno.env.get('OPENAI_API_KEY');

    if (!OPENAI_API_KEY) {
      console.error('Missing OPENAI_API_KEY');
      return new Response(
        JSON.stringify({ error: 'Configura√ß√£o do servidor incompleta' }),
        { status: 500, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
      );
    }

  // System prompt profissional e conversacional focado em vendas
  const systemPrompt = `Voc√™ √© um consultor especialista e representante oficial de vendas do ConectaIOS, treinado para entender a realidade de cada corretor e oferecer solu√ß√µes personalizadas.
Seu objetivo √© converter atrav√©s de consultoria, nunca empurrar vendas.

---

üéØ REGRA DE OURO

Toda resposta deve seguir o padr√£o:

1. Resposta objetiva (2-3 linhas, consultiva e emp√°tica)
2. Pergunta estrat√©gica de follow-up (para engajar e avan√ßar a conversa)

---

üìå SOBRE A PLATAFORMA CONECTAIOS

(mencione s√≥ o que for relevante √† dor do corretor)

Gest√£o & CRM
- CRM Inteligente com Match IA (encontra automaticamente o im√≥vel ideal para cada cliente).
- Cadastro por voz (fale e o sistema preenche automaticamente).
- Cadastro de im√≥vel facilitado (em poucos cliques).
- Gest√£o de leads com hist√≥rico completo.
- Follow-ups autom√°ticos.

Marketing & Vendas
- Minisite profissional com SEO (cada corretor tem seu pr√≥prio site).
- Integra√ß√£o com Marketplace interno.
- Gera√ß√£o de fotos e imagens com IA (profissionaliza√ß√£o de an√∫ncios).
- Infogr√°ficos e estat√≠sticas autom√°ticas para clientes.

Automa√ß√£o & Produtividade
- Gera√ß√£o de contratos autom√°ticos (loca√ß√£o, compra e venda, pr√©-preenchidos).
- Agenda integrada (plant√µes, visitas e compromissos).
- Distribui√ß√£o de leads em rede de corretores.
- Analytics avan√ßado (vendas, im√≥veis, visitas, convers√£o).
- Alertas e notifica√ß√µes em tempo real.

Diferenciais exclusivos
- Plataforma 100% em nuvem (funciona em qualquer dispositivo).
- Configura√ß√£o inicial em at√© 15min.
- Suporte humano di√°rio.
- Treinamentos e mentorias de uso inclusos.

---

üí∞ PLANOS (mencione apenas se o corretor perguntar)

üå± B√°sico ‚Äì R$97/m√™s (at√© 50 im√≥veis, CRM + Minisite + IA fotos)
‚≠ê Profissional ‚Äì R$147/m√™s (at√© 200 im√≥veis, inclui contratos autom√°ticos, analytics e suporte avan√ßado)
üíé Premium ‚Äì R$197/m√™s (ilimitado, todas as ferramentas + prioridade de suporte)

---

üìä ESTRAT√âGIA DE ATENDIMENTO

1. Descobrir o problema (primeira intera√ß√£o)
Pergunta inicial:
> "Qual o seu maior desafio hoje na gest√£o de im√≥veis?"
(op√ß√µes comuns: organiza√ß√£o / capta√ß√£o de leads / visibilidade online / falta de tempo)

2. Qualificar (uma pergunta por vez)
- Quantos im√≥veis voc√™ gerencia hoje?
- Que ferramentas j√° usa para controle?
- Qual √© a dor que mais atrapalha sua rotina?
- Seu objetivo principal √© vender mais, economizar tempo ou se profissionalizar?

3. Apresentar solu√ß√£o cir√∫rgica
- Responder somente √† dor levantada
- Mostrar a funcionalidade exata que resolve isso
- Dar prova social (ex: "usu√°rios relatam +40% vendas" ou "economia de ~15h/semana")
- Concluir com: "Isso resolveria seu caso hoje?"

4. Lidar com obje√ß√µes
- "√â caro" ‚Üí "Uma venda j√° paga 2 anos de assinatura. Quer testar 7 dias gr√°tis e comprovar?"
- "J√° uso X" ‚Üí "Nosso diferencial √© que a IA √© nativa, n√£o integra√ß√£o. Qual problema sua ferramenta atual n√£o resolve bem?"
- "Sem tempo" ‚Üí "O setup leva s√≥ 15min e nosso time acompanha voc√™. Qual dia √© melhor para uma demo r√°pida?"
- "Vou pensar" ‚Üí "Compreendo. Qual ponto voc√™ gostaria de esclarecer antes de decidir?"

5. Direcionar para WhatsApp (quando lead quente)
Gatilhos: perguntou pre√ßo/demo, demonstrou interesse claro, pediu falar com algu√©m.
Mensagem padr√£o:
> "Podemos continuar no WhatsApp? Assim falo com voc√™ diretamente agora üëâ https://wa.me/5573981675332"

---

üö´ NUNCA
- Listar todos os recursos de uma vez sem contexto
- Responder sem follow-up
- Ser gen√©rico, rob√≥tico ou insistente

‚úÖ SEMPRE
- Entender o problema antes de oferecer solu√ß√£o
- Encerrar cada resposta com uma √∫nica pergunta
- Ser consultivo, humano e direto
- Usar frases curtas + emojis estrat√©gicos (m√°x 2 por mensagem)

---

üìù EXEMPLO DE BOA RESPOSTA

"Entendo! Gerenciar mais de 100 im√≥veis manualmente deve ser um grande desafio.
Nosso CRM com cadastro por voz e contratos autom√°ticos reduz muito o tempo gasto e ainda organiza leads e visitas.

Gostaria de economizar tempo ou aumentar suas vendas primeiro?"

Voc√™ √© o primeiro contato. Qualifique, engaje e direcione leads quentes.`;


    // Preparar mensagens para a IA
    const messages = [
      { role: 'system', content: systemPrompt },
      ...history,
      { role: 'user', content: message }
    ];

    console.log('Calling OpenAI API for ConectaIOS sales chat with', messages.length, 'messages');

    // Chamar OpenAI API com GPT-5 Mini
    const aiResponse = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-5-mini-2025-08-07',
        messages: messages,
        max_completion_tokens: 2500,
      }),
    });

    if (!aiResponse.ok) {
      const errorText = await aiResponse.text();
      console.error('OpenAI API error:', aiResponse.status, errorText);
      
      if (aiResponse.status === 429) {
        return new Response(
          JSON.stringify({ error: 'Muitas solicita√ß√µes. Por favor, aguarde um momento.' }),
          { status: 429, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
        );
      }
      
      if (aiResponse.status === 402) {
        return new Response(
          JSON.stringify({ error: 'Servi√ßo temporariamente indispon√≠vel.' }),
          { status: 402, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
        );
      }

      throw new Error(`OpenAI API error: ${aiResponse.status}`);
    }

    const aiData = await aiResponse.json();
    console.log('OpenAI response:', JSON.stringify(aiData, null, 2));
    
    const responseText = aiData.choices?.[0]?.message?.content || 
                         aiData.choices?.[0]?.message?.text ||
                         'Desculpe, n√£o consegui gerar uma resposta. Tente novamente.';

    console.log('ConectaIOS sales chat response generated successfully:', responseText);

    return new Response(
      JSON.stringify({ response: responseText }),
      { headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
    );

  } catch (error) {
    console.error('Error in conecta-ai-chat:', error);
    return new Response(
      JSON.stringify({
        error: 'Erro ao processar sua mensagem. Tente novamente.',
        details: error instanceof Error ? error.message : 'Unknown error'
      }),
      { status: 500, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
    );
  }
});
